[
  {
    "path": "Java課程/2023-10-14-java/",
    "title": "Java的變數Java-variable",
    "description": "這篇文章告訴大家如何製作圖表",
    "author": [
      {
        "name": "董宸賓",
        "url": {}
      }
    ],
    "date": "2023-08-19",
    "categories": [],
    "contents": "\n\nContents\n什麼是變數\n宣告變數\n變數規則\n駝峰寫法：\n每個變數的名稱都必須符合識別符號(Identifer)規範\n\n資料型別(Data Types)\n基本型別\n布林型別(Boolean Data Type)\n數值型別\n整數型別\n浮點數型別(Floating Point Data Types)\n\n參照型別\n字串(String)\nString Length\ntoUpperCase() and toLowerCase():\nindexOf()\nString equals()\nsubstring\n\n跳脫序列補充\n\n\n\n\n\n\n\n\n什麼是變數\n程式執行時，必須將所需的資料存在一個特別的地方，而這個地方被稱為「變數」\n指定變數讓執行程式更有效率\n宣告變數\njava是一種嚴格型別(Strong-Typed)的程式語言，變數在使用前一定要宣告並指定類型\n變數規則\n駝峰寫法：\n開頭英文小寫，之後英文大寫\nex:eBay、studentAge\n每個變數的名稱都必須符合識別符號(Identifer)規範\n必須以英文字母開頭，大小寫不拘，也可以用”＿“或”$”\n之後可以用0~9\n長度不拘\n不能與保留字(Reserved Word)重複。\n關鍵字：程式執行的動作\n字面常數：java已設定的特定常數\n字母相同，大小寫不同的變數將被視為不同變數\n資料型別(Data Types)\njava中有許多不同的型別，如整數int，double型別d\n其中又可分成兩種類別\n基本型別(Primitive Data Types)：直接放在變數中，存放少量的資料\n參照型別(Reference Data Types)：此型別資料放在額外配置的空間，變數裡的是地址， 經由參照變數的地址找到真正的資料， 通常用來存放大量資料\n基本型別\n分為兩大類，布林型別與數值型別\n布林型別(Boolean Data Type)\n包含true和false\n\n//布林型別範例\npublic class Java_in_9_13 {\n public static void main(String[] argv) {\n boolean test = false;\n System.out.println(\"布林變數答案是\"+test);}\n}\n\n數值型別\n又分為整數型別與浮點數型別\n整數型別\n分為五類\nbyte:-128~127\nshort:-32678~32767\nint:-2147483648~21748364\nlong:-9223372036854775808~9223372036854775807\nchar:0~65535\n可以用10進位、2進位、16進位、8進位\n10進位：非0開頭的整數\n2進位：0b或0B開頭，只有0和1為合法數字\n16進位：0x或0X開頭，可採用任意大寫寫英文字符組成\n8進位：0開頭\n\n//正數型別\npublic class Java_in_9_13 {\n public static void main(String[] argv) {\n System.out.println(\"10進位的1113 =\"+ 1357);\n  \n  //int型別2進位\n int i = 0b10011001;\n System.out.println(\"2進位的0b10011001 = \"+i);\n  \n//long型別16進位\n long l = OXADEF;\n System.out.println(\"8進位的OXADEF = \"+l);\n\n//short型別8進位\nshort s = 01357;\nSystem.out.println(\"8進位的01357 = \"+s);}\n\n//數字過長的情況下建議用底線區隔，使用long型別要在後面加上L\nlong l = 1_113_224_411L;\nSystem.out.println(\"變數l =\"+ l)}\n  \n}\n\nchar可以代表一個單一的Unicode字元\n\n//char範例\npublic class Java_in_9_13 {\n public static void main(String[] argv) {\n   \n char ch;\n ch='b';\n System.out.println(\"變數ch的內容 =\"+ ch);\n \n ch='我';\n System.out.println(\"變數ch的內容 =\"+ ch);\n \n ch=98;//為B的編碼\n System.out.println(\"變數ch的內容 =\"+ ch);\n \n //跳脫序列編碼\n ch='\\u5b57'//16進位5b57是'字'的編碼\n System.out.println(\"變數ch的內容 =\"+ ch);\n  }\n  \n}\n\n浮點數型別(Floating Point Data Types)\n分為float型別與double型別\n注意：double和float建議在後面加上d和f\n得用兩種方式代表\n帶小數點：\n科學記號：ex:1.32E2\n\n\npublic class Java_in_9_13 {\n public static void main(String[] argv) {\n   \n double d =1.32E2;\n System.out.println(\"變數double的內容 =\"+ d);\n \n float f1 = 1.37123F;\n float f2 = 0.12345F;\n float f3 ;\n f3 = f1+f2;\n System.out.println(f3);\n  }\n  \n}\n\n參照型別\n分為三種類別，分別是字串(String)、陣列（Array）、物件（Object)\n字串(String)\nString是一支”class”，所以他是大寫!\n\n//\npublic class Java_in_9_13 {\n public static void main(String[] argv) {\n   \n String s1=\"第一個字串\";\n String s2=\"第二個\\t字串\";//兩個字串中間可以使用跳脫序列;\\t代表字元中的Tab\n \n System.out.println(s1);\n System.out.println(s2);\n System.out.println(s1+\"\\n\"+s2);\n \n  }\n  \n}\n\nString也是一個object，因此他可以使用method，以下示範幾個\nString Length\n\n\npublic class Java_in_9_13 {\n public static void main(String[] argv) {\n   \n String greeting =\"Hello\";\n \n System.out.printf(\"The lenth of greeting: %d\",greeting.length());\n \n  }\n  \n}\n\ntoUpperCase() and toLowerCase():\n\n\npublic class Java_in_9_13 {\n public static void main(String[] argv) {\n   \n String greeting =\"Hello\";\n \n System.out.println(greeting.toLowercase());\n System.out.println(greeting.toUppercase());\n \n  }\n  \n}\n\nindexOf()\n某個字串在另外一個字串的第幾個位置\n\n//\npublic class Java_in_9_13 {\n public static void main(String[] argv) {\n   \n String txt =\"Hello is word\";\n String word = \"Hello\";\n \n System.out.println(txt.indexOf(word));\n \n  }\n  \n}\n\nString equals()\n\n//\npublic class Java_in_9_13 {\n public static void main(String[] argv) {\n   \n   String s1 =\"Hello\";\n   String s2 =\"Hello\";\n   String s3= \"heiio\";\n   \n \n   System.out.println(s1.equals(s2));\n   System.out.println(s1.equals(s3));\n \n  }\n  \n}\n\n這裡要比較String equals()和==\n簡單來說==比較兩個String有沒有相同”地址”\n而equals()比較兩個String有沒有相同的內容\n\n\nShow code\n\npublic class Java_in_9_13 {\n public static void main(String[] argv) {\n*  String s1 =\"Hello\";\n   String s2 = new String(\"Hello\");\n   \n   System.out.println(s1.equals(s2));\n   System.out.println(s1 == s2);\n \n }\n  \n}\n\nsubstring\n在一個Sting當中，透過給定位置，賦予新的String該位置的內容\n很抽象吧！\n\n\npublic class Java_in_9_13 {\n public static void main(String[] argv) {\n  \n    String A = \"lsy\";\n        String b=A.substring(0,3);\n        //代表從第0個(l)印到第3-1個(y)\n        \n        System.out.printf(\"%s\",b);\n \n }\n  \n}\n\n跳脫序列補充\n\n\n\n\n",
    "preview": {},
    "last_modified": "2023-10-14T16:55:48+08:00",
    "input_file": {}
  },
  {
    "path": "Java課程/2023-10-14-javaoperater/",
    "title": "Java的運算",
    "description": {},
    "author": [
      {
        "name": "董宸賓",
        "url": {}
      }
    ],
    "date": "2023-08-19",
    "categories": [],
    "contents": "\n\nContents\nJava的Operater\nType Casting\nMath methods\n用scanner取得使用者輸入\n\n\n\n\n\n\n\nJava的Operater\n分為四種類型\nArithmetic Operators:基礎的數學運算\n\nAssignment Operators:即=，指派變數的值\n\nLogical Operators:包括and，or，not\n\n\n\n\n//搭配boolean的運算\n\npublic class Java_in_9_13 {\n public static void main(String[] argv) {\n   \n   boolean a = true, b = false;\n   \n   System.out.println(a&b);\n   System.out.println(a&&b);\n   System.out.println(a|b);\n   System.out.println(a||b);\n \n }\n  \n}\n\n\n//ShortCircuit短路式邏輯運算符\n\npublic class Java_in_9_13 {\n public static void main(String[] argv) {\n   \n   i=3, j=4;\n   System.out.println(true|((i+1)==j));\n   System.out.println(a&&b);\n   System.out.println(a|b);\n   System.out.println(a||b);\n \n }\n  \n}\n\nComparison Operators:比較兩個變數\n\n值得注意的是，要盡量避免浮點數(double)的比較\nType Casting\n讓變數在基本型別中進行轉換，分為兩種\nWidening Casting放大型別(automatically)\nbyte -> short -> char -> int -> long -> float -> double\nNarrowing Casting限縮型別\nbyte <- short <- char <- int <- long <- float <- double\n\n\npublic class Java_in_9_13 {\n public static void main(String[] argv) {\n   \n   int i1 = 33;\n   int i4 = 12;\n   double i2 = i1 ;//放大型別不需特別宣告\n   int i3 = (int) i2 ;//縮小型別特別宣告\n   double i5 = (double)(i1+14)/12; //在計算的時候記得要特別宣告\n   \n   System.out.println(i1);\n   System.out.println(i2);\n   System.out.println(i3);\n   System.out.println(i5);\n \n }\n  \n}\n\nMath methods\nMath.min，max找最小，最大值\nMath.sqrt()找平方根後的值\nMath.abs()找絕對值\nMath.random()找出在0~1之間的隨機值\n用scanner取得使用者輸入\n\nimport java.util.Scanner;\nimport java.util.Random;\n\npublic class Lab2 {\n\n    public static void main(String[] args) {\n        \n      int num1, num2;\n      \n        Scanner sc = new Scanner(System.in);//打開scanner\n        \n        num1 = sc.nextInt();//由輸入端輸入一個整數\n        num2 = sc.nextInt();//next()取字串，nextByte()取Byte值...\n        \n        System.out.print(\"gap = \"+ num1-num2);\n        \n        sc.close();\n        \n    }\n\n}\n\n\n\n\n",
    "preview": {},
    "last_modified": "2023-10-14T15:42:31+08:00",
    "input_file": {}
  }
]
